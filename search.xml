<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/27/hello-world/"/>
      <url>/2024/06/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo 项目并在 GitHub 上部署指南</title>
      <link href="/2022/03/02/My-First-Post/"/>
      <url>/2022/03/02/My-First-Post/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-Hexo-项目并在-GitHub-上部署指南"><a href="#使用-Hexo-项目并在-GitHub-上部署指南" class="headerlink" title="使用 Hexo 项目并在 GitHub 上部署指南"></a>使用 Hexo 项目并在 GitHub 上部署指南</h1><h2 id="Hexo-简介"><a href="#Hexo-简介" class="headerlink" title="Hexo 简介"></a>Hexo 简介</h2><p>Hexo 是一个快速、简洁且高效的博客框架，基于 Node.js 开发，适用于个人和团队博客的搭建。</p><h2 id="我为什么选择Hexo-作为博客框架的搭建"><a href="#我为什么选择Hexo-作为博客框架的搭建" class="headerlink" title="我为什么选择Hexo,作为博客框架的搭建"></a>我为什么选择Hexo,作为博客框架的搭建</h2><p>原因：近期在使用air2软件的服务中，相关bt离线服务无法正常下载，在google搜索后发现了一个对该问题分析原因的网站[网站地址]（<a href="https://p3terx.com/">https://p3terx.com/</a> “p3terx”），点了点，加载响应超级快，体验感觉非常好，我就希望我的博客主站就用这个来做吧，那么是怎么做呢，先通过openai的chatgpt 进行交互，了解到网站是由Hexo 及butterfly主题来生成的。那么我决定来搭建一个属于个人的博客网站。</p><h2 id="步骤一：安装-Hexo"><a href="#步骤一：安装-Hexo" class="headerlink" title="步骤一：安装 Hexo"></a>步骤一：安装 Hexo</h2><ol><li><p><strong>前置：本地服务一定有 Node.js 和 npm</strong></p><ul><li>访问 <a href="https://nodejs.org/">Node.js 官网</a> 下载并安装最新版本的 Node.js。</li><li>npm 会随 Node.js 一同安装。</li></ul></li><li><p><strong>安装 Hexo</strong></p><ul><li>npm install -g hexo-cli</li><li>hexo init myblog</li></ul></li><li><p><strong>hexo的一些指令及文件格式介绍</strong></p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init <span class="comment">#命令用于初始化一个本地文件夹为网站的根目录</span></span><br><span class="line">$ hexo new title <span class="comment">#新建一篇文章</span></span><br><span class="line">$ hexo generate <span class="comment">#可以简写成 hexo g该命令用于生成静态文件</span></span><br><span class="line">$ hexo server <span class="comment">#命令用于启动本地服务器，一般可以简写成 hexo s</span></span><br><span class="line">   <span class="comment">#可以加一些参数</span></span><br><span class="line">      -p    <span class="comment">#选项 ，指定服务器端口，默认为 4000</span></span><br><span class="line">      -i    <span class="comment">#选项，指定服务器 IP 地址，默认为 0.0.0.0</span></span><br><span class="line">      -s    <span class="comment">#选项，静态模式 ，仅提供 public 文件夹中的文件并禁用文件监视</span></span><br><span class="line">$ hexo deploy <span class="comment">#命令用于部署网站，一般可以简写成 hexo d (这个基本就是推送部署到指定位置)</span></span><br><span class="line">$ hexo clean <span class="comment">#命令用于清理缓存文件，是一个比较常用的命令</span></span><br><span class="line">$ hexo --safe <span class="comment">#表示安全模式，用于禁用加载插件和脚本</span></span><br><span class="line">$ hexo --debug <span class="comment">#表示调试模式，用于将消息详细记录到终端和 debug.log 文件</span></span><br><span class="line">$ hexo --silent  <span class="comment">#表示静默模式，用于静默输出到终端</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="步骤二：配置主题与文件目录"><a href="#步骤二：配置主题与文件目录" class="headerlink" title="步骤二：配置主题与文件目录"></a>步骤二：配置主题与文件目录</h2><ol><li><strong>Butterfly主题下载</strong><br>-项目根目录下安装 Butterfly 主题   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-theme-butterfly</span><br></pre></td></tr></table></figure>-配置文件<blockquote><p>hexo配置文件<br>   -项目根目录：_config.yml<br>   -找到 theme 配置项，将其值改为 butterfly：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></p></blockquote></li><li><strong>Butterfly 主题配置</strong><br>-Butterfly 主题有自己的配置文件 _config.butterfly.yml，通常在 themes&#x2F;butterfly&#x2F; 目录下。<blockquote><p>_config.butterfly.yml<br>   -网站基本信息：如标题、描述、语言等。<br>   -菜单和导航栏：定义导航栏中的菜单项。<br>   -外观：如主题颜色、字体、背景图等。<br>   -插件和小工具：如搜索功能、标签云、分类、最近文章等。</p></blockquote></li></ol><h3 id="撰写文章"><a href="#撰写文章" class="headerlink" title="撰写文章"></a>撰写文章</h3><ol><li><strong>Hexo 使用 Markdown 格式来撰写文章。</strong><ul><li>手动创建：在 source&#x2F;_posts&#x2F; 目录下，1.可以创建一个新的 Markdown 文件：**.md</li><li>自动创建： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new todaynode <span class="comment">#新建一篇文章</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="步骤三：hexo部署：配置-Git"><a href="#步骤三：hexo部署：配置-Git" class="headerlink" title="步骤三：hexo部署：配置 Git"></a>步骤三：hexo部署：配置 Git</h2><ol><li><p><strong>在 GitHub 上创建仓库主站。</strong></p><ul><li>登录 GitHub，创建一个新的空仓库，例如 username.github.io（其中 username 是你的 GitHub 用户名）。</li></ul></li><li><p><strong>hexo 部署</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g  <span class="comment">#该命令用于生成静态文件  public </span></span><br></pre></td></tr></table></figure><ul><li>在 Hexo 项目根目录下，安装 hexo-deployer-git 插件</li><li>配置 _config.yml 文件，添加部署设置： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ deploy:</span><br><span class="line">   <span class="built_in">type</span>: git</span><br><span class="line">   repo: https://github.com/your-username/your-repo.git</span><br><span class="line">   branch: main</span><br></pre></td></tr></table></figure></li><li>配置 Git<blockquote><p>使用 SSH 密钥认证：<br>   生成 SSH 密钥：如果你还没有 SSH 密钥，可以使用以下命令生成：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#复制代码</span></span><br><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;your_email@example.com&quot;</span></span><br><span class="line"><span class="comment">#按照提示一路回车，生成密钥对。</span></span><br><span class="line"><span class="comment">#添加 SSH 密钥到 GitHub：</span></span><br><span class="line"><span class="comment">#复制你的 SSH 公钥：</span></span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub  <span class="comment">#(ssh 目录)</span></span><br><span class="line"><span class="comment">#将公钥添加到 GitHub 的 SSH 设置中。</span></span><br><span class="line"><span class="comment">#登录 GitHub，转到 Settings -&gt; SSH and GPG keys -&gt; New SSH key，将复制的公钥粘贴到 Key 文本框中，然后点击 Add SSH key。</span></span><br></pre></td></tr></table></figure></p></blockquote></li><li>推送 hexo d <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d  <span class="comment">#会自动推送public目录下的文件到git </span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="其它GIT相关"><a href="#其它GIT相关" class="headerlink" title="其它GIT相关"></a>其它GIT相关</h3><ul><li>使用git 托管工具推送部署到 GitHub Pages</li><li>Git 基本操作<blockquote><pre><code> git info   初始化 git remote add origin git@github.com:wangyaoqi/wangyaoqi.github.io.git        设置远程仓库 git remote -v  确认 origin 远程仓库 git add .  #提交更改到本地仓库 git commit -m &quot;提交说明&quot;    git push origin main      #推送本地更改到远程仓库 git checkout main   #切换分支 git pull origin main  #拉取分支变更 git merge my-new-branch  #合并分支 git merge my-new-branch --allow-unrelated-histories  #强制合并  前提已在主分支下</code></pre></blockquote></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
